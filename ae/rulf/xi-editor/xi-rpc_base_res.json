{"<F as Callback>::call": true, "<F as IdleProc>::call": true, "<PanicGuard<'a, W> as std::ops::Drop>::drop": false, "<RawPeer<W> as Peer>::box_clone": false, "<RawPeer<W> as Peer>::request_is_pending": false, "<RawPeer<W> as Peer>::schedule_idle": false, "<RawPeer<W> as Peer>::schedule_timer": false, "<RawPeer<W> as Peer>::send_rpc_notification": false, "<RawPeer<W> as Peer>::send_rpc_request": false, "<RawPeer<W> as Peer>::send_rpc_request_async": false, "<RawPeer<W> as std::clone::Clone>::clone": false, "<Timer as std::cmp::Ord>::cmp": true, "<Timer as std::cmp::PartialOrd>::partial_cmp": true, "<error::Error as std::convert::From<error::RemoteError>>::from": false, "<error::ReadError as std::convert::From<serde_json::Error>>::from": false, "<error::ReadError as std::convert::From<std::io::Error>>::from": false, "<error::RemoteError as serde::Deserialize<'de>>::deserialize": false, "<error::RemoteError as serde::Serialize>::serialize": false, "<error::RemoteError as std::convert::From<serde_json::Error>>::from": false, "<impl std::clone::Clone for std::boxed::Box<(dyn Peer + 'static)>>::clone": false, "<parse::RpcObject as std::convert::From<serde_json::Value>>::from": true, "<test_utils::DummyPeer as Peer>::box_clone": false, "<test_utils::DummyPeer as Peer>::request_is_pending": true, "<test_utils::DummyPeer as Peer>::schedule_idle": true, "<test_utils::DummyPeer as Peer>::schedule_timer": true, "<test_utils::DummyPeer as Peer>::send_rpc_notification": false, "<test_utils::DummyPeer as Peer>::send_rpc_request": false, "<test_utils::DummyPeer as Peer>::send_rpc_request_async": false, "<test_utils::DummyWriter as std::io::Write>::flush": true, "<test_utils::DummyWriter as std::io::Write>::write": true, "Handler::idle": false, "RawPeer::<W>::check_timers": false, "RawPeer::<W>::disconnect": false, "RawPeer::<W>::get_rx_timeout": false, "RawPeer::<W>::handle_response": false, "RawPeer::<W>::needs_exit": false, "RawPeer::<W>::put_rx": false, "RawPeer::<W>::reset_needs_exit": false, "RawPeer::<W>::respond": false, "RawPeer::<W>::send": false, "RawPeer::<W>::send_rpc_request_common": false, "RawPeer::<W>::try_get_idle": false, "RawPeer::<W>::try_get_rx": false, "ResponseHandler::invoke": false, "RpcCtx::get_peer": false, "RpcCtx::schedule_idle": false, "RpcLoop::<W>::get_raw_peer": false, "RpcLoop::<W>::mainloop": false, "RpcLoop::<W>::new": false, "do_idle": false, "error::ReadError::is_disconnect": true, "error::RemoteError::custom": true, "next_read": false, "parse::MessageReader::next": false, "parse::MessageReader::parse": false, "parse::RpcObject::get_id": false, "parse::RpcObject::get_method": true, "parse::RpcObject::into_response": false, "parse::RpcObject::into_rpc": true, "parse::RpcObject::is_response": true, "test_utils::DummyReader::expect_nothing": false, "test_utils::DummyReader::expect_object": false, "test_utils::DummyReader::expect_response": false, "test_utils::DummyReader::expect_rpc": false, "test_utils::DummyReader::next_timeout": false, "test_utils::make_reader": false, "test_utils::test_channel": false}