{"<&'a utf8::Utf8Sequence as std::iter::IntoIterator>::into_iter": true, "<ast::Ast as std::ops::Drop>::drop": true, "<ast::ClassSet as std::ops::Drop>::drop": true, "<ast::Error as std::error::Error>::description": false, "<ast::Position as std::cmp::Ord>::cmp": true, "<ast::Position as std::cmp::PartialOrd>::partial_cmp": true, "<ast::Span as std::cmp::Ord>::cmp": true, "<ast::Span as std::cmp::PartialOrd>::partial_cmp": true, "<ast::parse::NestLimiter<'p, 's, P> as ast::visitor::Visitor>::finish": false, "<ast::parse::ParserBuilder as std::default::Default>::default": false, "<ast::print::PrinterBuilder as std::default::Default>::default": false, "<ast::print::Writer<'p, W> as ast::visitor::Visitor>::finish": false, "<ast::print::Writer<'p, W> as ast::visitor::Visitor>::visit_alternation_in": true, "<ast::print::Writer<'p, W> as ast::visitor::Visitor>::visit_class_set_binary_op_in": false, "<ast::print::Writer<'p, W> as ast::visitor::Visitor>::visit_class_set_item_post": true, "<ast::print::Writer<'p, W> as ast::visitor::Visitor>::visit_class_set_item_pre": false, "<ast::print::Writer<'p, W> as ast::visitor::Visitor>::visit_post": false, "<ast::print::Writer<'p, W> as ast::visitor::Visitor>::visit_pre": false, "<char as hir::interval::Bound>::as_u32": false, "<char as hir::interval::Bound>::decrement": true, "<char as hir::interval::Bound>::increment": false, "<char as hir::interval::Bound>::max_value": false, "<char as hir::interval::Bound>::min_value": true, "<error::Error as std::convert::From<ast::Error>>::from": false, "<error::Error as std::convert::From<hir::Error>>::from": false, "<error::Error as std::error::Error>::description": false, "<error::Formatter<'e, ast::ErrorKind> as std::convert::From<&'e ast::Error>>::from": false, "<error::Formatter<'e, hir::ErrorKind> as std::convert::From<&'e hir::Error>>::from": false, "<hir::ClassBytesIter<'a> as std::iter::Iterator>::next": false, "<hir::ClassBytesRange as hir::interval::Interval>::case_fold_simple": false, "<hir::ClassBytesRange as hir::interval::Interval>::lower": true, "<hir::ClassBytesRange as hir::interval::Interval>::set_lower": true, "<hir::ClassBytesRange as hir::interval::Interval>::set_upper": false, "<hir::ClassBytesRange as hir::interval::Interval>::upper": true, "<hir::ClassUnicodeIter<'a> as std::iter::Iterator>::next": false, "<hir::ClassUnicodeRange as hir::interval::Interval>::case_fold_simple": false, "<hir::ClassUnicodeRange as hir::interval::Interval>::lower": true, "<hir::ClassUnicodeRange as hir::interval::Interval>::set_lower": true, "<hir::ClassUnicodeRange as hir::interval::Interval>::set_upper": false, "<hir::ClassUnicodeRange as hir::interval::Interval>::upper": false, "<hir::Error as std::error::Error>::description": false, "<hir::Hir as std::ops::Drop>::drop": true, "<hir::interval::IntervalSetIter<'a, I> as std::iter::Iterator>::next": true, "<hir::literal::Literal as std::cmp::PartialEq>::eq": true, "<hir::literal::Literal as std::cmp::PartialOrd>::partial_cmp": true, "<hir::literal::Literal as std::convert::AsRef<[u8]>>::as_ref": true, "<hir::literal::Literal as std::ops::Deref>::deref": true, "<hir::literal::Literal as std::ops::DerefMut>::deref_mut": true, "<hir::print::PrinterBuilder as std::default::Default>::default": true, "<hir::print::Writer<'p, W> as hir::visitor::Visitor>::finish": false, "<hir::print::Writer<'p, W> as hir::visitor::Visitor>::visit_alternation_in": false, "<hir::print::Writer<'p, W> as hir::visitor::Visitor>::visit_post": false, "<hir::print::Writer<'p, W> as hir::visitor::Visitor>::visit_pre": false, "<hir::translate::TranslatorBuilder as std::default::Default>::default": true, "<hir::translate::TranslatorI<'t, 'p> as ast::visitor::Visitor>::finish": false, "<hir::translate::TranslatorI<'t, 'p> as ast::visitor::Visitor>::visit_class_set_binary_op_in": false, "<hir::translate::TranslatorI<'t, 'p> as ast::visitor::Visitor>::visit_class_set_binary_op_post": false, "<hir::translate::TranslatorI<'t, 'p> as ast::visitor::Visitor>::visit_class_set_binary_op_pre": false, "<hir::translate::TranslatorI<'t, 'p> as ast::visitor::Visitor>::visit_class_set_item_post": false, "<hir::translate::TranslatorI<'t, 'p> as ast::visitor::Visitor>::visit_class_set_item_pre": false, "<u8 as hir::interval::Bound>::as_u32": false, "<u8 as hir::interval::Bound>::decrement": false, "<u8 as hir::interval::Bound>::increment": false, "<u8 as hir::interval::Bound>::max_value": false, "<u8 as hir::interval::Bound>::min_value": false, "<utf8::Utf8Sequences as std::iter::Iterator>::next": true, "ast::Alternation::into_ast": true, "ast::Ast::has_subexprs": false, "ast::Ast::is_empty": true, "ast::Ast::span": false, "ast::Class::span": true, "ast::ClassAsciiKind::from_name": true, "ast::ClassSet::is_empty": true, "ast::ClassSet::span": true, "ast::ClassSet::union": true, "ast::ClassSetItem::span": false, "ast::ClassSetRange::is_valid": true, "ast::ClassSetUnion::into_item": true, "ast::ClassSetUnion::push": true, "ast::ClassUnicode::is_negated": true, "ast::ClassUnicodeOpKind::is_equal": true, "ast::Concat::into_ast": false, "ast::Error::auxiliary_span": true, "ast::Error::kind": false, "ast::Error::pattern": false, "ast::Error::span": false, "ast::Flags::add_item": true, "ast::Flags::flag_state": true, "ast::FlagsItemKind::is_negation": true, "ast::Group::capture_index": false, "ast::Group::flags": false, "ast::Group::is_capturing": false, "ast::HexLiteralKind::digits": true, "ast::Literal::byte": true, "ast::Position::new": true, "ast::RepetitionRange::is_valid": true, "ast::Span::is_empty": true, "ast::Span::is_one_line": true, "ast::Span::new": true, "ast::Span::splat": true, "ast::Span::with_end": true, "ast::Span::with_start": true, "ast::parse::NestLimiter::<'p, 's, P>::decrement_depth": false, "ast::parse::NestLimiter::<'p, 's, P>::new": false, "ast::parse::Parser::new": true, "ast::parse::Parser::parse": true, "ast::parse::Parser::parse_with_comments": true, "ast::parse::Parser::reset": true, "ast::parse::ParserBuilder::build": false, "ast::parse::ParserBuilder::ignore_whitespace": false, "ast::parse::ParserBuilder::nest_limit": true, "ast::parse::ParserBuilder::new": false, "ast::parse::ParserBuilder::octal": true, "ast::parse::ParserI::<'s, P>::add_capture_name": false, "ast::parse::ParserI::<'s, P>::bump": true, "ast::parse::ParserI::<'s, P>::bump_and_bump_space": false, "ast::parse::ParserI::<'s, P>::bump_if": false, "ast::parse::ParserI::<'s, P>::bump_space": false, "ast::parse::ParserI::<'s, P>::char": false, "ast::parse::ParserI::<'s, P>::char_at": false, "ast::parse::ParserI::<'s, P>::column": false, "ast::parse::ParserI::<'s, P>::ignore_whitespace": false, "ast::parse::ParserI::<'s, P>::is_eof": false, "ast::parse::ParserI::<'s, P>::is_lookaround_prefix": false, "ast::parse::ParserI::<'s, P>::line": false, "ast::parse::ParserI::<'s, P>::maybe_parse_ascii_class": false, "ast::parse::ParserI::<'s, P>::new": false, "ast::parse::ParserI::<'s, P>::next_capture_index": false, "ast::parse::ParserI::<'s, P>::offset": false, "ast::parse::ParserI::<'s, P>::parse": false, "ast::parse::ParserI::<'s, P>::parse_capture_name": false, "ast::parse::ParserI::<'s, P>::parse_decimal": false, "ast::parse::ParserI::<'s, P>::parse_escape": false, "ast::parse::ParserI::<'s, P>::parse_flag": false, "ast::parse::ParserI::<'s, P>::parse_flags": false, "ast::parse::ParserI::<'s, P>::parse_group": false, "ast::parse::ParserI::<'s, P>::parse_hex": false, "ast::parse::ParserI::<'s, P>::parse_hex_brace": false, "ast::parse::ParserI::<'s, P>::parse_hex_digits": false, "ast::parse::ParserI::<'s, P>::parse_perl_class": false, "ast::parse::ParserI::<'s, P>::parse_primitive": false, "ast::parse::ParserI::<'s, P>::parse_set_class": false, "ast::parse::ParserI::<'s, P>::parse_set_class_item": false, "ast::parse::ParserI::<'s, P>::parse_set_class_open": false, "ast::parse::ParserI::<'s, P>::parse_set_class_range": false, "ast::parse::ParserI::<'s, P>::parse_unicode_class": false, "ast::parse::ParserI::<'s, P>::parse_with_comments": false, "ast::parse::ParserI::<'s, P>::parser": false, "ast::parse::ParserI::<'s, P>::pattern": false, "ast::parse::ParserI::<'s, P>::peek": false, "ast::parse::ParserI::<'s, P>::peek_space": false, "ast::parse::ParserI::<'s, P>::pop_group_end": false, "ast::parse::ParserI::<'s, P>::pos": false, "ast::parse::ParserI::<'s, P>::push_alternate": true, "ast::parse::ParserI::<'s, P>::push_group": false, "ast::parse::ParserI::<'s, P>::push_or_add_alternation": false, "ast::parse::ParserI::<'s, P>::span": false, "ast::parse::ParserI::<'s, P>::span_char": false, "ast::parse::Primitive::into_ast": false, "ast::parse::Primitive::span": false, "ast::parse::is_capture_char": true, "ast::parse::is_hex": false, "ast::parse::specialize_err": false, "ast::print::Printer::new": true, "ast::print::Printer::print": false, "ast::print::PrinterBuilder::build": false, "ast::print::PrinterBuilder::new": false, "ast::print::Writer::<'p, W>::fmt_assertion": false, "ast::print::Writer::<'p, W>::fmt_class_ascii": false, "ast::print::Writer::<'p, W>::fmt_class_bracketed_post": false, "ast::print::Writer::<'p, W>::fmt_class_bracketed_pre": false, "ast::print::Writer::<'p, W>::fmt_class_perl": false, "ast::print::Writer::<'p, W>::fmt_class_set_binary_op_kind": false, "ast::print::Writer::<'p, W>::fmt_class_unicode": true, "ast::print::Writer::<'p, W>::fmt_flags": true, "ast::print::Writer::<'p, W>::fmt_group_post": true, "ast::print::Writer::<'p, W>::fmt_group_pre": false, "ast::print::Writer::<'p, W>::fmt_literal": true, "ast::print::Writer::<'p, W>::fmt_repetition": true, "ast::print::Writer::<'p, W>::fmt_repetition_range": false, "ast::print::Writer::<'p, W>::fmt_set_flags": false, "ast::visitor::ClassFrame::<'a>::child": false, "ast::visitor::ClassInduct::<'a>::from_bracketed": false, "ast::visitor::ClassInduct::<'a>::from_set": true, "ast::visitor::Frame::<'a>::child": true, "ast::visitor::HeapVisitor::<'a>::induct_class": false, "ast::visitor::HeapVisitor::<'a>::new": true, "ast::visitor::HeapVisitor::<'a>::pop": false, "ast::visitor::HeapVisitor::<'a>::pop_class": false, "ast::visitor::Visitor::start": false, "ast::visitor::Visitor::visit_alternation_in": false, "ast::visitor::Visitor::visit_class_set_binary_op_in": false, "ast::visitor::Visitor::visit_class_set_binary_op_post": false, "ast::visitor::Visitor::visit_class_set_binary_op_pre": false, "ast::visitor::Visitor::visit_class_set_item_post": false, "ast::visitor::Visitor::visit_class_set_item_pre": false, "ast::visitor::Visitor::visit_post": false, "ast::visitor::Visitor::visit_pre": false, "error::Spans::<'p>::add": true, "error::Spans::<'p>::from_formatter": false, "error::Spans::<'p>::left_pad_line_number": false, "error::Spans::<'p>::line_number_padding": true, "error::Spans::<'p>::notate": false, "error::Spans::<'p>::notate_line": true, "error::repeat_char": true, "escape": true, "escape_into": true, "hir::Class::case_fold_simple": true, "hir::Class::is_always_utf8": true, "hir::Class::negate": true, "hir::ClassBytes::case_fold_simple": true, "hir::ClassBytes::difference": true, "hir::ClassBytes::empty": true, "hir::ClassBytes::intersect": true, "hir::ClassBytes::is_all_ascii": true, "hir::ClassBytes::iter": true, "hir::ClassBytes::negate": true, "hir::ClassBytes::new": false, "hir::ClassBytes::push": true, "hir::ClassBytes::ranges": true, "hir::ClassBytes::symmetric_difference": true, "hir::ClassBytes::union": true, "hir::ClassBytesRange::end": true, "hir::ClassBytesRange::new": true, "hir::ClassBytesRange::start": true, "hir::ClassUnicode::case_fold_simple": false, "hir::ClassUnicode::difference": true, "hir::ClassUnicode::empty": false, "hir::ClassUnicode::intersect": false, "hir::ClassUnicode::is_all_ascii": false, "hir::ClassUnicode::iter": true, "hir::ClassUnicode::negate": true, "hir::ClassUnicode::new": false, "hir::ClassUnicode::push": true, "hir::ClassUnicode::ranges": true, "hir::ClassUnicode::symmetric_difference": true, "hir::ClassUnicode::try_case_fold_simple": true, "hir::ClassUnicode::union": true, "hir::ClassUnicodeRange::end": true, "hir::ClassUnicodeRange::new": true, "hir::ClassUnicodeRange::start": true, "hir::Error::kind": true, "hir::Error::pattern": false, "hir::Error::span": true, "hir::ErrorKind::description": true, "hir::Hir::alternation": false, "hir::Hir::anchor": false, "hir::Hir::any": false, "hir::Hir::class": true, "hir::Hir::concat": false, "hir::Hir::dot": true, "hir::Hir::empty": true, "hir::Hir::group": false, "hir::Hir::into_kind": false, "hir::Hir::is_all_assertions": false, "hir::Hir::is_alternation_literal": true, "hir::Hir::is_always_utf8": false, "hir::Hir::is_anchored_end": true, "hir::Hir::is_anchored_start": false, "hir::Hir::is_any_anchored_end": true, "hir::Hir::is_any_anchored_start": true, "hir::Hir::is_line_anchored_end": false, "hir::Hir::is_line_anchored_start": true, "hir::Hir::is_literal": true, "hir::Hir::is_match_empty": true, "hir::Hir::kind": false, "hir::Hir::literal": false, "hir::Hir::repetition": false, "hir::Hir::word_boundary": false, "hir::HirInfo::is_all_assertions": true, "hir::HirInfo::is_alternation_literal": true, "hir::HirInfo::is_always_utf8": true, "hir::HirInfo::is_anchored_end": true, "hir::HirInfo::is_anchored_start": true, "hir::HirInfo::is_any_anchored_end": true, "hir::HirInfo::is_any_anchored_start": true, "hir::HirInfo::is_line_anchored_end": true, "hir::HirInfo::is_line_anchored_start": true, "hir::HirInfo::is_literal": true, "hir::HirInfo::is_match_empty": false, "hir::HirInfo::new": true, "hir::HirInfo::set_all_assertions": true, "hir::HirInfo::set_alternation_literal": true, "hir::HirInfo::set_always_utf8": true, "hir::HirInfo::set_anchored_end": true, "hir::HirInfo::set_anchored_start": true, "hir::HirInfo::set_any_anchored_end": true, "hir::HirInfo::set_any_anchored_start": true, "hir::HirInfo::set_line_anchored_end": true, "hir::HirInfo::set_line_anchored_start": false, "hir::HirInfo::set_literal": true, "hir::HirInfo::set_match_empty": true, "hir::HirKind::has_subexprs": false, "hir::HirKind::is_empty": true, "hir::Literal::is_unicode": true, "hir::Repetition::is_match_empty": false, "hir::WordBoundary::is_negated": true, "hir::interval::Interval::create": false, "hir::interval::Interval::difference": false, "hir::interval::Interval::intersect": false, "hir::interval::Interval::is_contiguous": false, "hir::interval::Interval::is_intersection_empty": false, "hir::interval::Interval::is_subset": false, "hir::interval::Interval::symmetric_difference": false, "hir::interval::Interval::union": false, "hir::interval::IntervalSet::<I>::canonicalize": false, "hir::interval::IntervalSet::<I>::case_fold_simple": false, "hir::interval::IntervalSet::<I>::difference": false, "hir::interval::IntervalSet::<I>::intersect": false, "hir::interval::IntervalSet::<I>::intervals": false, "hir::interval::IntervalSet::<I>::is_canonical": false, "hir::interval::IntervalSet::<I>::iter": true, "hir::interval::IntervalSet::<I>::negate": false, "hir::interval::IntervalSet::<I>::new": false, "hir::interval::IntervalSet::<I>::push": false, "hir::interval::IntervalSet::<I>::symmetric_difference": false, "hir::interval::IntervalSet::<I>::union": false, "hir::literal::Literal::cut": true, "hir::literal::Literal::empty": true, "hir::literal::Literal::is_cut": true, "hir::literal::Literal::new": true, "hir::literal::Literals::_add_char_class": false, "hir::literal::Literals::add": false, "hir::literal::Literals::add_byte_class": false, "hir::literal::Literals::add_char_class": true, "hir::literal::Literals::add_char_class_reverse": false, "hir::literal::Literals::all_complete": false, "hir::literal::Literals::any_complete": false, "hir::literal::Literals::class_exceeds_limits": false, "hir::literal::Literals::clear": false, "hir::literal::Literals::contains_empty": true, "hir::literal::Literals::cross_add": true, "hir::literal::Literals::cross_product": false, "hir::literal::Literals::cut": false, "hir::literal::Literals::empty": true, "hir::literal::Literals::is_empty": true, "hir::literal::Literals::limit_class": true, "hir::literal::Literals::limit_size": true, "hir::literal::Literals::literals": false, "hir::literal::Literals::longest_common_prefix": true, "hir::literal::Literals::longest_common_suffix": false, "hir::literal::Literals::min_len": true, "hir::literal::Literals::num_bytes": false, "hir::literal::Literals::remove_complete": true, "hir::literal::Literals::reverse": false, "hir::literal::Literals::set_limit_class": true, "hir::literal::Literals::set_limit_size": false, "hir::literal::Literals::to_empty": false, "hir::literal::Literals::trim_suffix": false, "hir::literal::Literals::unambiguous_prefixes": true, "hir::literal::Literals::unambiguous_suffixes": true, "hir::literal::Literals::union": true, "hir::literal::cls_byte_count": false, "hir::literal::cls_char_count": true, "hir::literal::escape_byte": true, "hir::literal::escape_bytes": true, "hir::literal::escape_unicode": false, "hir::literal::position": true, "hir::print::Printer::new": true, "hir::print::Printer::print": false, "hir::print::PrinterBuilder::build": false, "hir::print::PrinterBuilder::new": false, "hir::print::Writer::<'p, W>::write_literal_byte": false, "hir::print::Writer::<'p, W>::write_literal_char": true, "hir::print::Writer::<'p, W>::write_literal_class_byte": false, "hir::translate::Flags::case_insensitive": true, "hir::translate::Flags::dot_matches_new_line": true, "hir::translate::Flags::from_ast": false, "hir::translate::Flags::merge": true, "hir::translate::Flags::multi_line": true, "hir::translate::Flags::swap_greed": true, "hir::translate::Flags::unicode": true, "hir::translate::HirFrame::unwrap_class_bytes": true, "hir::translate::HirFrame::unwrap_class_unicode": false, "hir::translate::HirFrame::unwrap_expr": false, "hir::translate::HirFrame::unwrap_group": false, "hir::translate::Translator::new": true, "hir::translate::Translator::translate": false, "hir::translate::TranslatorBuilder::allow_invalid_utf8": true, "hir::translate::TranslatorBuilder::build": true, "hir::translate::TranslatorBuilder::case_insensitive": false, "hir::translate::TranslatorBuilder::dot_matches_new_line": true, "hir::translate::TranslatorBuilder::multi_line": true, "hir::translate::TranslatorBuilder::new": true, "hir::translate::TranslatorBuilder::swap_greed": true, "hir::translate::TranslatorBuilder::unicode": false, "hir::translate::TranslatorI::<'t, 'p>::bytes_fold_and_negate": false, "hir::translate::TranslatorI::<'t, 'p>::class_literal_byte": false, "hir::translate::TranslatorI::<'t, 'p>::convert_unicode_class_error": false, "hir::translate::TranslatorI::<'t, 'p>::error": false, "hir::translate::TranslatorI::<'t, 'p>::flags": false, "hir::translate::TranslatorI::<'t, 'p>::hir_assertion": false, "hir::translate::TranslatorI::<'t, 'p>::hir_dot": false, "hir::translate::TranslatorI::<'t, 'p>::hir_from_char": false, "hir::translate::TranslatorI::<'t, 'p>::hir_from_char_case_insensitive": false, "hir::translate::TranslatorI::<'t, 'p>::hir_literal": false, "hir::translate::TranslatorI::<'t, 'p>::hir_perl_byte_class": false, "hir::translate::TranslatorI::<'t, 'p>::hir_perl_unicode_class": false, "hir::translate::TranslatorI::<'t, 'p>::hir_unicode_class": false, "hir::translate::TranslatorI::<'t, 'p>::literal_to_char": false, "hir::translate::TranslatorI::<'t, 'p>::new": false, "hir::translate::TranslatorI::<'t, 'p>::pop": false, "hir::translate::TranslatorI::<'t, 'p>::set_flags": false, "hir::translate::TranslatorI::<'t, 'p>::trans": false, "hir::translate::TranslatorI::<'t, 'p>::unicode_fold_and_negate": false, "hir::translate::ascii_class": false, "hir::translate::hir_ascii_class_bytes": false, "hir::visitor::Frame::<'a>::child": false, "hir::visitor::HeapVisitor::<'a>::induct": false, "hir::visitor::HeapVisitor::<'a>::new": false, "hir::visitor::HeapVisitor::<'a>::pop": false, "hir::visitor::Visitor::start": false, "hir::visitor::Visitor::visit_alternation_in": false, "hir::visitor::Visitor::visit_post": false, "hir::visitor::Visitor::visit_pre": false, "hir::visitor::visit": false, "is_meta_character": true, "is_word_byte": true, "is_word_character": true, "parser::Parser::new": false, "parser::Parser::parse": false, "parser::ParserBuilder::allow_invalid_utf8": false, "parser::ParserBuilder::build": false, "parser::ParserBuilder::case_insensitive": false, "parser::ParserBuilder::dot_matches_new_line": false, "parser::ParserBuilder::ignore_whitespace": false, "parser::ParserBuilder::multi_line": false, "parser::ParserBuilder::nest_limit": false, "parser::ParserBuilder::new": false, "parser::ParserBuilder::octal": true, "parser::ParserBuilder::swap_greed": false, "parser::ParserBuilder::unicode": false, "try_is_word_character": true, "unicode::ClassQuery::<'a>::canonical_binary": true, "unicode::ClassQuery::<'a>::canonicalize": false, "unicode::ages": false, "unicode::ages::imp": false, "unicode::bool_property": false, "unicode::bool_property::imp": false, "unicode::canonical_gencat": false, "unicode::canonical_prop": false, "unicode::canonical_prop::imp": false, "unicode::canonical_script": false, "unicode::canonical_value": true, "unicode::class": false, "unicode::contains_simple_case_mapping": false, "unicode::contains_simple_case_mapping::imp": false, "unicode::gcb": false, "unicode::gcb::imp": false, "unicode::gencat": false, "unicode::gencat::imp": false, "unicode::hir_class": false, "unicode::is_word_character": false, "unicode::is_word_character::imp": false, "unicode::perl_digit": false, "unicode::perl_digit::imp": false, "unicode::perl_space": false, "unicode::perl_space::imp": false, "unicode::perl_word": false, "unicode::perl_word::imp": false, "unicode::property_set": false, "unicode::property_values": false, "unicode::property_values::imp": false, "unicode::sb": false, "unicode::sb::imp": false, "unicode::script": false, "unicode::script::imp": false, "unicode::script_extension": false, "unicode::script_extension::imp": false, "unicode::simple_fold": true, "unicode::simple_fold::imp": false, "unicode::symbolic_name_normalize": true, "unicode::symbolic_name_normalize_bytes": true, "unicode::wb": false, "unicode::wb::imp": false, "utf8::ScalarRange::as_ascii": false, "utf8::ScalarRange::encode": true, "utf8::ScalarRange::is_ascii": true, "utf8::ScalarRange::is_valid": true, "utf8::ScalarRange::split": false, "utf8::Utf8Range::matches": true, "utf8::Utf8Range::new": true, "utf8::Utf8Sequence::as_slice": true, "utf8::Utf8Sequence::from_encoded_range": true, "utf8::Utf8Sequence::len": false, "utf8::Utf8Sequence::matches": true, "utf8::Utf8Sequence::reverse": true, "utf8::Utf8Sequences::new": false, "utf8::Utf8Sequences::push": false, "utf8::Utf8Sequences::reset": true, "utf8::max_scalar_value": true}