{"<Ident as std::cmp::Ord>::cmp": false, "<Ident as std::cmp::PartialEq<T>>::eq": false, "<Ident as std::cmp::PartialEq>::eq": false, "<Ident as std::cmp::PartialOrd>::partial_cmp": false, "<Ident as std::hash::Hash>::hash": false, "<TokenStream as std::convert::From<proc_macro::TokenStream>>::from": false, "<TokenStream as std::default::Default>::default": false, "<TokenStream as std::iter::Extend<TokenStream>>::extend": false, "<TokenStream as std::iter::Extend<TokenTree>>::extend": false, "<TokenStream as std::iter::FromIterator<TokenStream>>::from_iter": false, "<TokenStream as std::iter::FromIterator<TokenTree>>::from_iter": false, "<TokenStream as std::str::FromStr>::from_str": false, "<TokenTree as std::convert::From<Group>>::from": false, "<TokenTree as std::convert::From<Ident>>::from": false, "<TokenTree as std::convert::From<Literal>>::from": false, "<TokenTree as std::convert::From<Punct>>::from": false, "<fallback::Ident as std::cmp::PartialEq<T>>::eq": true, "<fallback::Ident as std::cmp::PartialEq>::eq": false, "<fallback::TokenStream as std::convert::From<TokenTree>>::from": false, "<fallback::TokenStream as std::convert::From<proc_macro::TokenStream>>::from": false, "<fallback::TokenStream as std::iter::Extend<TokenTree>>::extend": false, "<fallback::TokenStream as std::iter::Extend<fallback::TokenStream>>::extend": true, "<fallback::TokenStream as std::iter::FromIterator<TokenTree>>::from_iter": false, "<fallback::TokenStream as std::iter::FromIterator<fallback::TokenStream>>::from_iter": false, "<fallback::TokenStream as std::iter::IntoIterator>::into_iter": false, "<fallback::TokenStream as std::ops::Drop>::drop": false, "<fallback::TokenStream as std::str::FromStr>::from_str": false, "<imp::Group as std::convert::From<fallback::Group>>::from": false, "<imp::Ident as std::cmp::PartialEq<T>>::eq": false, "<imp::Ident as std::cmp::PartialEq>::eq": false, "<imp::LexError as std::convert::From<fallback::LexError>>::from": false, "<imp::LexError as std::convert::From<proc_macro::LexError>>::from": false, "<imp::Literal as std::convert::From<fallback::Literal>>::from": false, "<imp::Span as std::convert::From<fallback::Span>>::from": false, "<imp::TokenStream as std::convert::From<fallback::TokenStream>>::from": true, "<imp::TokenStream as std::convert::From<proc_macro::TokenStream>>::from": false, "<imp::TokenStream as std::iter::Extend<TokenTree>>::extend": false, "<imp::TokenStream as std::iter::Extend<imp::TokenStream>>::extend": false, "<imp::TokenStream as std::iter::FromIterator<TokenTree>>::from_iter": false, "<imp::TokenStream as std::iter::FromIterator<imp::TokenStream>>::from_iter": false, "<imp::TokenStream as std::iter::IntoIterator>::into_iter": false, "<imp::TokenStream as std::str::FromStr>::from_str": false, "<imp::TokenTreeIter as std::iter::Iterator>::next": false, "<imp::TokenTreeIter as std::iter::Iterator>::size_hint": false, "<impl std::convert::From<TokenStream> for proc_macro::TokenStream>::from": false, "<token_stream::IntoIter as std::iter::Iterator>::next": false, "Group::_new": false, "Group::_new_stable": false, "Group::delimiter": true, "Group::new": false, "Group::set_span": false, "Group::span": false, "Group::span_close": true, "Group::span_open": false, "Group::stream": true, "Ident::_new": false, "Ident::_new_raw": false, "Ident::new": false, "Ident::set_span": false, "Ident::span": false, "Literal::_new": false, "Literal::_new_stable": false, "Literal::byte_string": false, "Literal::character": true, "Literal::f32_suffixed": false, "Literal::f32_unsuffixed": true, "Literal::f64_suffixed": false, "Literal::f64_unsuffixed": false, "Literal::i128_suffixed": false, "Literal::i128_unsuffixed": true, "Literal::i16_suffixed": false, "Literal::i16_unsuffixed": false, "Literal::i32_suffixed": true, "Literal::i32_unsuffixed": true, "Literal::i64_suffixed": false, "Literal::i64_unsuffixed": true, "Literal::i8_suffixed": false, "Literal::i8_unsuffixed": false, "Literal::isize_suffixed": false, "Literal::isize_unsuffixed": false, "Literal::set_span": false, "Literal::span": true, "Literal::string": true, "Literal::subspan": false, "Literal::u128_suffixed": false, "Literal::u128_unsuffixed": false, "Literal::u16_suffixed": false, "Literal::u16_unsuffixed": true, "Literal::u32_suffixed": true, "Literal::u32_unsuffixed": false, "Literal::u64_suffixed": false, "Literal::u64_unsuffixed": false, "Literal::u8_suffixed": false, "Literal::u8_unsuffixed": false, "Literal::usize_suffixed": true, "Literal::usize_unsuffixed": true, "Punct::as_char": true, "Punct::new": false, "Punct::set_span": false, "Punct::spacing": true, "Punct::span": false, "Span::_new": true, "Span::_new_stable": true, "Span::call_site": true, "Span::join": false, "Span::located_at": false, "Span::mixed_site": false, "Span::resolved_at": true, "Span::unstable": false, "Span::unwrap": false, "TokenStream::_new": true, "TokenStream::_new_stable": false, "TokenStream::is_empty": false, "TokenStream::new": true, "TokenTree::set_span": false, "TokenTree::span": false, "detection::force_fallback": false, "detection::initialize": true, "detection::inside_proc_macro": false, "detection::unforce_fallback": true, "fallback::<impl std::convert::From<fallback::TokenStream> for proc_macro::TokenStream>::from": false, "fallback::Group::delimiter": true, "fallback::Group::new": false, "fallback::Group::set_span": true, "fallback::Group::span": true, "fallback::Group::span_close": false, "fallback::Group::span_open": false, "fallback::Group::stream": false, "fallback::Ident::_new": true, "fallback::Ident::new": true, "fallback::Ident::new_raw": false, "fallback::Ident::set_span": true, "fallback::Ident::span": false, "fallback::Literal::_new": false, "fallback::Literal::byte_string": false, "fallback::Literal::character": true, "fallback::Literal::f32_suffixed": false, "fallback::Literal::f32_unsuffixed": false, "fallback::Literal::f64_suffixed": false, "fallback::Literal::f64_unsuffixed": true, "fallback::Literal::i128_suffixed": true, "fallback::Literal::i128_unsuffixed": false, "fallback::Literal::i16_suffixed": true, "fallback::Literal::i16_unsuffixed": false, "fallback::Literal::i32_suffixed": true, "fallback::Literal::i32_unsuffixed": true, "fallback::Literal::i64_suffixed": false, "fallback::Literal::i64_unsuffixed": false, "fallback::Literal::i8_suffixed": false, "fallback::Literal::i8_unsuffixed": false, "fallback::Literal::isize_suffixed": true, "fallback::Literal::isize_unsuffixed": false, "fallback::Literal::set_span": true, "fallback::Literal::span": false, "fallback::Literal::string": false, "fallback::Literal::subspan": true, "fallback::Literal::u128_suffixed": true, "fallback::Literal::u128_unsuffixed": false, "fallback::Literal::u16_suffixed": false, "fallback::Literal::u16_unsuffixed": false, "fallback::Literal::u32_suffixed": true, "fallback::Literal::u32_unsuffixed": true, "fallback::Literal::u64_suffixed": true, "fallback::Literal::u64_unsuffixed": true, "fallback::Literal::u8_suffixed": true, "fallback::Literal::u8_unsuffixed": false, "fallback::Literal::usize_suffixed": true, "fallback::Literal::usize_unsuffixed": false, "fallback::SourceFile::is_real": false, "fallback::SourceFile::path": true, "fallback::Span::call_site": true, "fallback::Span::first_byte": true, "fallback::Span::join": true, "fallback::Span::last_byte": true, "fallback::Span::located_at": true, "fallback::Span::mixed_site": true, "fallback::Span::resolved_at": false, "fallback::TokenStream::is_empty": false, "fallback::TokenStream::new": true, "fallback::TokenStream::push_token": false, "fallback::TokenStream::push_token::push_negative_literal": false, "fallback::TokenStream::take_inner": false, "fallback::debug_span_field_if_nontrivial": false, "fallback::force": true, "fallback::get_cursor": false, "fallback::is_ident_continue": false, "fallback::is_ident_start": true, "fallback::unforce": true, "fallback::validate_ident": true, "fallback::validate_ident::ident_ok": false, "imp::<impl std::convert::From<imp::TokenStream> for proc_macro::TokenStream>::from": false, "imp::<impl std::convert::From<proc_macro::Span> for Span>::from": false, "imp::DeferredTokenStream::evaluate_now": false, "imp::DeferredTokenStream::into_token_stream": true, "imp::DeferredTokenStream::is_empty": true, "imp::DeferredTokenStream::new": false, "imp::Group::delimiter": true, "imp::Group::new": false, "imp::Group::set_span": true, "imp::Group::span": false, "imp::Group::span_close": false, "imp::Group::span_open": false, "imp::Group::stream": false, "imp::Group::unwrap_nightly": false, "imp::Ident::new": false, "imp::Ident::new_raw": false, "imp::Ident::set_span": false, "imp::Ident::span": false, "imp::Ident::unwrap_nightly": false, "imp::Literal::byte_string": false, "imp::Literal::character": false, "imp::Literal::f32_suffixed": false, "imp::Literal::f32_unsuffixed": false, "imp::Literal::f64_suffixed": false, "imp::Literal::f64_unsuffixed": false, "imp::Literal::i128_suffixed": false, "imp::Literal::i128_unsuffixed": false, "imp::Literal::i16_suffixed": true, "imp::Literal::i16_unsuffixed": false, "imp::Literal::i32_suffixed": false, "imp::Literal::i32_unsuffixed": false, "imp::Literal::i64_suffixed": false, "imp::Literal::i64_unsuffixed": false, "imp::Literal::i8_suffixed": false, "imp::Literal::i8_unsuffixed": false, "imp::Literal::isize_suffixed": false, "imp::Literal::isize_unsuffixed": false, "imp::Literal::set_span": false, "imp::Literal::span": false, "imp::Literal::string": false, "imp::Literal::subspan": true, "imp::Literal::u128_suffixed": false, "imp::Literal::u128_unsuffixed": false, "imp::Literal::u16_suffixed": false, "imp::Literal::u16_unsuffixed": false, "imp::Literal::u32_suffixed": false, "imp::Literal::u32_unsuffixed": false, "imp::Literal::u64_suffixed": false, "imp::Literal::u64_unsuffixed": false, "imp::Literal::u8_suffixed": false, "imp::Literal::u8_unsuffixed": false, "imp::Literal::unwrap_nightly": false, "imp::Literal::usize_suffixed": false, "imp::Literal::usize_unsuffixed": false, "imp::Span::call_site": false, "imp::Span::join": false, "imp::Span::located_at": false, "imp::Span::mixed_site": false, "imp::Span::resolved_at": false, "imp::Span::unwrap": false, "imp::Span::unwrap_nightly": false, "imp::TokenStream::is_empty": false, "imp::TokenStream::new": false, "imp::TokenStream::unwrap_nightly": false, "imp::TokenStream::unwrap_stable": false, "imp::debug_span_field_if_nontrivial": false, "imp::into_compiler_token": false, "imp::mismatch": true, "imp::proc_macro_parse": true, "parse::Cursor::<'a>::advance": true, "parse::Cursor::<'a>::as_bytes": false, "parse::Cursor::<'a>::bytes": false, "parse::Cursor::<'a>::char_indices": false, "parse::Cursor::<'a>::chars": true, "parse::Cursor::<'a>::is_empty": true, "parse::Cursor::<'a>::len": false, "parse::Cursor::<'a>::parse": true, "parse::Cursor::<'a>::starts_with": true, "parse::backslash_u": false, "parse::backslash_x_byte": false, "parse::backslash_x_char": false, "parse::block_comment": false, "parse::byte": false, "parse::byte_string": false, "parse::character": false, "parse::cooked_byte_string": false, "parse::cooked_string": false, "parse::digits": false, "parse::doc_comment": false, "parse::doc_comment_contents": false, "parse::float": false, "parse::float_digits": false, "parse::ident": false, "parse::ident_any": false, "parse::ident_not_raw": false, "parse::int": false, "parse::is_whitespace": true, "parse::leaf_token": false, "parse::literal": false, "parse::literal_nocapture": false, "parse::literal_suffix": false, "parse::punct": false, "parse::punct_char": false, "parse::raw_string": true, "parse::skip_whitespace": false, "parse::string": false, "parse::take_until_newline_or_eof": false, "parse::token_stream": false, "parse::word_break": false, "token_stream::<impl std::iter::IntoIterator for TokenStream>::into_iter": false}